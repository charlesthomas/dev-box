name: Build and Publish Image

on:
  push:
    branches:
      - main

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set VERSIONS from file
        run: |
          cat VERSIONS >> "$GITHUB_ENV"

      - name: svu
        run: |
          curl -sLO https://github.com/caarlos0/svu/releases/download/v1.12.0/svu_1.12.0_linux_amd64.tar.gz
          tar -zxf svu_1.12.0_linux_amd64.tar.gz
          SVU_NEXT=$(./svu next --force-patch-increment --build=${{ env.CODE_SERVER_VERSION }})
          echo SVU_NEXT=${SVU_NEXT}
          echo "SVU_NEXT=${SVU_NEXT}" >> $GITHUB_ENV

      - name: tag
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: `refs/tags/${{ env.SVU_NEXT }}`,
              sha: context.sha
            })

      - name: Set up qemu
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker buildx
        uses: docker/setup-buildx-action@v3

      - name: registry auth
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: image metadata
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          flavor: |
            latest=true
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,enable=true,value=${{ env.SVU_NEXT }}

      - name: build & push image
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            BW_VERSION=${{ env.BW_VERSION }}
            CODE_SERVER_VERSION=${{ env.CODE_SERVER_VERSION }}
